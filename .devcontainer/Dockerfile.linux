# /**
#  * @file dockerfile
#  * @author Azmi ŞAHİN (azmisahin@outlook.com)
#  * @brief Docker is the tool that provides operating system level virtualization, also known as "containerization".
#  * @version 0.0.3
#  * @date 2022-01-01
#  *
#  * @copyright Copyright (c) 2022
#  */
# [Choice] Go version (use -bullseye variants on local arm64/Apple Silicon): 1, 1.18, 1.17, 1-bullseye, 1.18-bullseye, 1.17-bullseye, 1-buster, 1.18-buster, 1.17-buster
ARG VARIANT=1-bullseye
# base operation system image
FROM mcr.microsoft.com/vscode/devcontainers/go:0-${VARIANT} AS production

# Metadata indicating an image maintainer.
LABEL maintainer="Azmi ŞAHİN <azmisahin@outlook.com>"

# product arguments
ARG APP_ENV="development"
ARG APP_NAME="template"

# default arguments for build
ARG WORK_DIR="/template"
ARG BUILD_DIR="build"
ARG DIST_DIR="dist"

# default arguments for application

# product environment
ENV APP_ENV=${APP_ENV}
ENV APP_NAME=${APP_NAME}

# default envionment for build
ENV WORK_DIR=${WORK_DIR}
ENV BUILD_DIR=${BUILD_DIR}
ENV DIST_DIR=${DIST_DIR}

# [Choice] Node.js version: none, lts/*, 16, 14, 12, 10
ARG NODE_VERSION="none"
RUN if [ "${NODE_VERSION}" != "none" ]; then su vscode -c "umask 0002 && . /usr/local/share/nvm/nvm.sh && nvm install ${NODE_VERSION} 2>&1"; fi

FROM production AS development
# default environment for application

# install project dependencies
RUN sudo apt-get update
RUN sudo apt-get install git
RUN sudo apt-get install git-flow

# make the 'application' folder the current working directory
# WORKDIR ${WORK_DIR}

# copy project file the working directory
# COPY . .

# build
# RUN mkdir ${BUILD_DIR} && cd ${BUILD_DIR} && mkdir ${DIST_DIR}